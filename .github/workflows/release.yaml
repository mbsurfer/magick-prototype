name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, macos-12, windows-latest ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set output file name
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "file_name=MagickPrototype-macos-arm.zip" >> $GITHUB_ENV
          elif [[ "${{ matrix.os }}" == "macos-12" ]]; then
            echo "file_name=MagickPrototype-macos-intel.zip" >> $GITHUB_ENV
          else
            echo "file_name=MagickPrototype-windows.zip" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Build executable (Windows)
        if: runner.os == 'Windows'
        run: |
          pyinstaller --onefile --windowed --add-data "icon.png;." --icon=icon.ico --name=MagickPrototype prototype.py

      - name: Build executable (macOS)
        if: runner.os == 'macOS'
        run: |
          pyinstaller --onefile --windowed --add-data "icon.png:." --icon=icon.icns --name=MagickPrototype prototype.py

      - name: Zip dist (Windows)
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path dist\* -DestinationPath ${{ env.file_name }}
        shell: pwsh

      - name: Zip dist (macOS)
        if: runner.os == 'macOS'
        run: |
          zip -r ${{ env.file_name }} dist/

      - name: Display file structure for review
        run: ls -R

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.file_name }}
          path: ${{ env.file_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "MagickPrototype-windows.zip,MagickPrototype-macos-arm.zip,MagickPrototype-macos-intel.zip"